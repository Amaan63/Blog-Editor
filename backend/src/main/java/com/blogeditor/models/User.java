package com.blogeditor.models;

import com.fasterxml.jackson.annotation.JsonIgnore;
import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.util.ArrayList;
import java.util.List;

/**
 * Entity class representing a User in the system.
 * Maps to a database table storing user information.
 */
@Entity
@Data
@AllArgsConstructor
@NoArgsConstructor
public class User {

    /**
     * Primary key of the user entity.
     * Value is auto-generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * Email address of the user.
     * Must be unique and not null.
     */
    @Column(nullable = false, unique = true)
    private String email;

    /**
     * Encrypted password of the user.
     * Cannot be null.
     */
    @Column(nullable = false)
    private String password;

    /**
     * Username chosen by the user.
     * Must be unique and not null.
     */
    @Column(nullable = false, unique = true)
    private String username;

    /**
     * List of blog posts authored by this user.
     * One-to-many relationship: one user can have many blog posts.
     *
     * CascadeType.ALL means all operations (persist, remove, etc.) will cascade.
     * orphanRemoval=true ensures removal of blogs if they are removed from this collection.
     *
     * @JsonIgnore to prevent infinite recursion or unnecessary serialization when sending user info as JSON.
     */
    @JsonIgnore
    @OneToMany(mappedBy = "user", cascade = CascadeType.ALL, orphanRemoval = true)
    private List<Blogs> posts = new ArrayList<>();
}
